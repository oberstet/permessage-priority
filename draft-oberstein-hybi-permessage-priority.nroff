.pl 10.0i
.po 0
.ll 7.2i
.lt 7.2i
.nr LL 7.2i
.nr LT 7.2i
.ds LF Oberstein 
.ds RF FORMFEED[Page %]
.ds LH Internet-Draft
.ds RH January 2014
.ds CH Priority Extension for WebSocket
.ds CF Expires July 20, 2014
.hy 0
.nh
.ad l
.in 0

.nf
.tl 'Hybi Working Group''T. Oberstein'
.tl 'Internet-Draft''Tavendo GmbH'
.tl 'Intended Status: Standards Track''January 16, 2014'
.tl 'Expires: <Expiry Date>'
.fi

.\" Note. The ".tl" directive is used to generate the leading header 
.\" in Internet drafts. The information specified after ".tl" provides
.\" left, center and right components of a line separated by the ' character
.\" in the following manner:
.\" 
.\"  .tl '<left component>'<center component>'<right component>'
.\"
.\" Only the left and right components are used in Internet-draft headers
.\" This and other comments in this template can safely be deleted.

.ce 2
Message Priority Extension for WebSocket 
draft-oberstein-hybi-permessage-priority
.fi
.in 3


.ti 0
Abstract

This document specifies an extension to the WebSocket protocol that adds
message priorities to WebSocket data messages.
Endpoints and intermediaries supporting this extension can prioritize the
transmission of WebSocket messages according to assigned priorities.
The strict message ordering requirement of WebSocket is relaxed, allowing
to transmit messages of high priority without blocking of transmission when
a low priority message is already being sent.

Please send feedback to the hybi@ietf.org mailing list.

.ti 0
Status of this Memo

This Internet-Draft is submitted to IETF in full conformance with the provisions of BCP\078 and BCP\079.

Internet-Drafts are working documents of the Internet Engineering Task Force (IETF), its areas, and its working groups.  Note that other groups may also distribute working documents as \%Internet-Drafts.

Internet-Drafts are draft documents valid for a maximum of six months and may be updated, replaced, or obsoleted by other documents at any time.  It is inappropriate to use Internet-Drafts as reference material or to cite them other than as "work in progress."

The list of current Internet-Drafts can be accessed at \%http://www.ietf.org/1id-abstracts.html

The list of Internet-Draft Shadow Directories can be accessed at http://www.ietf.org/shadow.html


.ti 0
Copyright and License Notice\" Boilerplate from December 2009

.\" NOTE: Insert current <year> in the following paragraph
Copyright (c) 2014 IETF Trust and the persons identified as the document authors. All rights reserved.

This document is subject to BCP\078 and the IETF Trust's Legal Provisions Relating to IETF Documents \%(http://trustee.ietf.org/license-info) in effect on the date of publication of this document. Please review these documents carefully, as they describe your rights and restrictions with respect to this document. Code Components extracted from this document must include Simplified BSD License text as described in Section\04.e of the Trust Legal Provisions and are provided without warranty as described in the Simplified BSD License.



.\" \# TD4  -- Set TOC depth by altering this value (TD5 = depth 5)
.\" \# TOC  -- Beginning of auto updated Table of Contents
.in 0
Table of Contents

.nf
   1  Introduction  . . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.1  Conformance Requirements and Complementary Terminology  . .  3
     1.2  Complementary Terminology . . . . . . . . . . . . . . . . .  3
   2  WebSocket Per-message Priority Extension  . . . . . . . . . . .  4
   3  Extension Negotiation . . . . . . . . . . . . . . . . . . . . .  4
     3.1  Negotiation Examples  . . . . . . . . . . . . . . . . . . .  5
   4  Framing . . . . . . . . . . . . . . . . . . . . . . . . . . . .  6
   5  permessage-priority extension . . . . . . . . . . . . . . . . .  7
     5.1  Intermediaries  . . . . . . . . . . . . . . . . . . . . . .  8
   6  Security Considerations . . . . . . . . . . . . . . . . . . . .  9
   7  IANA Considerations . . . . . . . . . . . . . . . . . . . . . .  9
     7.1  Registration of the "permessage-priority" WebSocket
          Extension Name  . . . . . . . . . . . . . . . . . . . . . .  9
     7.2  Registration of the "Per-message Priority" WebSocket 
          Framing Header Bit  . . . . . . . . . . . . . . . . . . . .  9
   8  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . . 10
   9  References  . . . . . . . . . . . . . . . . . . . . . . . . . . 10
     9.1  Normative References  . . . . . . . . . . . . . . . . . . . 10
     9.2  Informative References  . . . . . . . . . . . . . . . . . . 10
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . . 10
.fi
.in 3

.\" \# ETC -- End of auto updated Table of Contents

.bp
.ti 0
1  Introduction

<Introduction Text>

.ti 0
1.1  Conformance Requirements and Complementary Terminology

The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
"SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be
interpreted as described in RFC 2119 [RFC2119].

Requirements phrased in the imperative as part of algorithms (such as
"strip any leading space characters" or "return false and abort these
steps") are to be interpreted with the meaning of the key word ("MUST", "SHOULD",
"MAY", etc.) used in introducing the algorithm.

Conformance requirements phrased as algorithms or specific steps can be implemented
in any manner, so long as the end result is equivalent.  In particular, the
algorithms defined in this specification are intended to be easy to understand and
are not intended to be performant.

This document references the procedure to _Fail the WebSocket Connection_.
This procedure is defined in Section 7.1.7 of [RFC6455].

This document references the event that _The WebSocket Connection is Established_
and the event that _A WebSocket Message Has Been Received_.
These events are defined in Section 4.1 and Section 6.2, respectively, of [RFC6455].


.ti 0
1.2  Complementary Terminology

This document defines some terms about WebSocket and WebSocket
Extension mechanism that are underspecified or not defined at all in
[RFC6455].  This terminology is effective only in this document and
any other documents that refer to this section.

Non-control message means a message that consists of non-control
frames as defined in Section 5.6 of [RFC6455].

Message payload (or payload of a message) means concatenation of the
payload data portion of all frames representing a single message, as
well as how /data/ is formed from in Section 6.2 of [RFC6455].

Extension in use next to extension X means the extension listed next
to X in the "Sec-WebSocket-Extensions" header in the server's opening
handshake as defined in Section 9.1 of [RFC6455].  Such an extension
is applied to outgoing data from the application right after X on
sender side but applied right before X to incoming data from the
underlying transport.

Extension negotiation offer means each element in the
"Sec-WebSocket-Extensions" header in the client's opening handshake.

Extension negotiation response means each element in the
"Sec-WebSocket-Extensions" header in the server's opening handshake.

Accept an extension negotiation offer means including a corresponding
extension negotiation response in the "Sec-WebSocket-Extensions"
header in the server's opening handshake.

Decline an extension negotiation offer means not including a
corresponding extension negotiation response in the
"Sec-WebSocket-Extensions" header in the server's opening handshake.


.ti 0
2  WebSocket Per-message Priority Extension

.\" Comment line providing info for the Authors or the RFC Editor
<Document text>

.in 6
.nf
Definitions and code {
  line 1
  line 2
}
.fi
.in 3

.\" Directives (e.g .ti and .in) and escape sequences (\, \&, \%, \" and \0) are used to control
.\" Formatting and are not displayed in the text document.

Special characters examples:
 
The characters \0, \&, \%, \" are not shown in text.
.\"
.\" You can display these character sequences in the text document by
.\" inserting the escape character '\'.
However, the characters \\0, \\&, \\%, \\" are displayed.

\&.ti 0  is displayed in text instead of used as a directive. 
.br
\&.\\"  is displayed in document instead of being treated as a comment

C:\\dir\\subdir\\file.ext  Shows inclusion of backslash "\\".


.ti 0
3  Extension Negotiation

To offer use of the permessage-priority extension, a client includes a "Sec-WebSocket-Extensions" header that contains an element with the value "permessage-priority" in the client's opening handshake of the WebSocket connection.

There are no parameters to the extension offer.

To accept an offer to use the permessage-priority extension, a server includes a "Sec-WebSocket-Extensions" header that contains an element with the value "permessage-priority" in the server's response during the opening handshake of the WebSocket connection.

There are no parameters to the extension acceptance.

A server MUST NOT accept a permessage-priority extension offer together with another extension if the permessage-priority extension will conflict with the other extension on use of the RSV2 bit.  A client that receives a response accepting a permessage-priority extension offer together with such an extension MUST _Fail the WebSocket Connection_.

A server declines a permessage-priority extension offer by not sending a "Sec-WebSocket-Extensions" header or by not including any element with the value "permessage-priority" in the "Sec-WebSocket-Extensions" header in it's response. If a server responds with no "Sec-WebSocket-Extensions" header or no "permessage-priority" element in the "Sec-WebSocket-Extensions" header, both endpoints proceed without permessage-priority extension once _the WebSocket Connection is established_.

If a server responds with a "permessage-priority" in the "Sec-WebSocket-Extensions" header and _the WebSocket Connection is established_, both endpoints MUST use the algorithm described in Section 6 to exchange prioritized WebSocket messages.


.ti 0
3.1  Negotiation Examples

The following are examples for the "Sec-WebSocket-Extensions" header in WebSocket opening
handshake client requests and server responses-

Client and server negotiate and agree to use permessage-priority extension:

.ti 6
Offer (client-to-server HTTP request header):

.ti 9
Sec-WebSocket-Extensions: permessage-priority

.ti 6
Accept (server-to-client HTTP response header):

.ti 9
Sec-WebSocket-Extensions: permessage-priority


Client offers, but server denies to use permessage-priority extension:

.ti 6
Offer (client-to-server HTTP request header):

.ti 9
Sec-WebSocket-Extensions: permessage-priority

.ti 6
Deny (server-to-client HTTP response header):

.ti 9
Sec-WebSocket-Extensions:


.ti 0
4  Framing

The permessage-priority extension operates only on non-control messages. Control messages remain completely unchanged.

This document allocates the RSV2 bit of the WebSocket header for the permessage-priority extension, and calls the bit "Per-message Priority". On a WebSocket connection where the permessage-priority extension is in use, this bit indicates whether a message is prioritized or not.

A prioritized message has the "Per-message Priority" bit set on the first and all subsequent fragments of the message.

First fragment of a prioritized message:

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
     |                       Frame Header (RSV2 set)                 |
     +---------------------------------------------------------------+
     |                          Message ID                           |
     +-------------------------------+-------------------------------+
     |       Message Priority        |    Response Priority Hint     |
     +-------------------------------+-------------------------------+
     |                         Payload Data                          |
     +---------------------------------------------------------------+


Subsequent fragments of a prioritized message:

      0                   1                   2                   3
      0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
     + - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - +
     |                       Frame Header (RSV2 set)                 |
     +---------------------------------------------------------------+
     |                          Message ID                           |
     +---------------------------------------------------------------+
     |                         Payload Data                          |
     +---------------------------------------------------------------+

.ti 3
Message ID:   32 bit

.in 6
The "Message ID" is interpreted as an unsigned integer in network byte order and provides a sender-chosen ID for the prioritized message. The ID carries no semantic meaning and is used by the receiver to correlate frames that form fragments of a given message. The ID 0 MUST NOT be used on prioritized messages.

.ti 3
Message Priority:  16 bit

.in 6
The "Message Priority" is interpreted as an unsigned integer in network byte order and provides the desired message priority for sending. The value 0 is the highest priority, the value 65535 is the lowest priority.

.ti 3
Response Priority Hint:  16 bit

.in 6
The "Response Priority Hint" is interpreted as an unsigned integer in network byte order and provides a hint to the receiver for the message priority to use when replying to the received message, in case the sent message is part of a request/response message exchange. The value 0 is the highest priority, the value 65535 is the lowest priority.



.ti 0
5  permessage-priority extension

Upon receiving a non-control frame with the RSV2 bit set:

  1) Read the "Message ID" and determine whether a prioritized message with that ID was started
  2) If no prioritized message with the received ID was started, read and remember "Message Priority" and "Response Priority Hint" and process the rest of the frame's payload as application data
  3) If a prioritized message with the received ID was already started, process the rest of the frame's payload as application data 

Upon receiving a non-control frame with the RSV2 bit not set:

  1) Treat the message as if a prioritized message with "Message ID" 0, "Message Priority" 0 and "Response Priority Hint" 0 would be processed
  2) Process the complete frame payload as application data

Upon receiving a non-control frame with the FIN bit set:

  1) Fire the _A WebSocket Message Has Been Received_ event with the application payload received for the message with the given ID.
  2) Mark the message ID as non-started.


.ti 0
5.1  Intermediaries


.bp
.ti 0
6  Security Considerations

With Per-message Priority Extension active, there can be more than one message in flight
in each direction, and hence, additional buffering might be required on endpoints and
intermediaries.

A rogue implementation or an attacker might use this to mount a denial-of-service attack,
exhausting memory in the target. For example, an attacker might start a large number of
prioritized messages, but never end them.

WebSocket endpoints and intermediaries supporting the Per-message Priority Extension SHOULD
therefor provide means to effectively limit the total buffering memory in use on a WebSocket
connection, and fail the WebSocket connection when that limit is reached.


.ti 0
7  IANA Considerations

.ti 0 
7.1  Registration of the "permessage-priority" WebSocket Extension Name

This section describes a WebSocket extension name registration in the WebSocket
Extension Name Registry [RFC6455].

Extension Identifier

.ti 6
permessage-priority

Extension Common Name

.ti 6
WebSocket Per-message Priority

Extension Definition

.ti 6
This document.

Known Incompatible Extensions

.ti 6
None

The "permessage-priority" extension name is used in the "Sec-WebSocket-Extensions"
header in the WebSocket opening handshake to negotiate use of the
permessage-priority extension.


.ti 0
7.2  Registration of the "Per-message Priority" WebSocket Framing Header Bit

This section describes a WebSocket framing header bit registration in the WebSocket
Framing Header Bits Registry [RFC6455].

Header Bit

.ti 6
RSV2

Common Name

.ti 6
Per-message Priority

Meaning

.ti 6
The message is prioritized or not.

Reference

.ti 6
Section X of this document.

The "Per-message Priority" framing header bit is used on all fragments of non-control
messages to indicate whether the fragment belongs to a prioritized message or not.


.ti 0
8  Acknowledgements

Tbd.


.ti 0
9  References

.ti 0 
9.1  Normative References

.in 14
.\" \# REF  -- Managed reference list. Syntax: [RFC]nnnn[;Label], ... ,[RFC]nnnn[;Label]
.\" \# 2119;KEYWORDS, 1776, RFC1925;TRUTHS
.\" \# ERF -- End of managed reference list
.\" ----------------------------------------
.\" The reference list can be changed at any time by altering the RFC list in the line below the .\" \# REF directive
.\" In order to execute any change, click on the 'Update All' button or select "Update 'Table of Contents' and References"
.\" from the "Edit" menu or press <F3>.
.\" NOTE: Managed reference list requires NroffEdit version 1.40 or later.
.ti 3
[RFC6455]  Fette, I. and A. Melnikov, "The WebSocket Protocol", RFC 6455, December 2011


.ti 0
9.2  Informative References

.in 14
.\" \# REF  -- Managed reference list. Syntax: [RFC]nnnn[;Label], ... ,[RFC]nnnn[;Label]
.\" \# 3514;EVILBIT, 5513, 5514
.\" \# ERF -- End of managed reference list
.in 3


.ti 0
Authors' Addresses

.sp
.nf
Tobias Oberstein
Tavendo GmbH

EMail: tobias.oberstein@tavendo.de
.sp
.fi

