 



Hybi Working Group                                          T. Oberstein
Internet-Draft                                              Tavendo GmbH
Intended Status: Standards Track                        January 16, 2014



               Message Priority Extension for WebSocket 
                draft-oberstein-hybi-permessage-priority


Abstract

   This document specifies an extension to the WebSocket protocol that
   adds message priorities to WebSocket data messages. Endpoints and
   intermediaries supporting this extension can prioritize the
   transmission of WebSocket messages according to assigned priorities.
   The strict message ordering requirement of WebSocket is relaxed,
   allowing to transmit messages of high priority without blocking of
   transmission when a low priority message is already being sent.

   Please send feedback to the hybi@ietf.org mailing list.

Status of this Memo

   This Internet-Draft is submitted to IETF in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF), its areas, and its working groups.  Note that
   other groups may also distribute working documents as
   Internet-Drafts.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   The list of current Internet-Drafts can be accessed at
   http://www.ietf.org/1id-abstracts.html

   The list of Internet-Draft Shadow Directories can be accessed at
   http://www.ietf.org/shadow.html


Copyright and License Notice

   Copyright (c) 2014 IETF Trust and the persons identified as the
   document authors. All rights reserved.
 


Oberstein                Expires July 20, 2014                  [Page 1]

Internet-Draft      Priority Extension for WebSocket        January 2014


   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents
   (http://trustee.ietf.org/license-info) in effect on the date of
   publication of this document. Please review these documents
   carefully, as they describe your rights and restrictions with respect
   to this document. Code Components extracted from this document must
   include Simplified BSD License text as described in Section 4.e of
   the Trust Legal Provisions and are provided without warranty as
   described in the Simplified BSD License.



Table of Contents

   1  Introduction  . . . . . . . . . . . . . . . . . . . . . . . . .  3
     1.1  Conformance Requirements and Complementary Terminology  . .  3
     1.2  Complementary Terminology . . . . . . . . . . . . . . . . .  3
   2  WebSocket Per-message Priority Extension  . . . . . . . . . . .  4
   3  Extension Negotiation . . . . . . . . . . . . . . . . . . . . .  4
     3.1  Negotiation Examples  . . . . . . . . . . . . . . . . . . .  5
   4  Framing . . . . . . . . . . . . . . . . . . . . . . . . . . . .  5
   5  Intermediaries  . . . . . . . . . . . . . . . . . . . . . . . .  5
   6  permessage-priority extension . . . . . . . . . . . . . . . . .  5
   7  Security Considerations . . . . . . . . . . . . . . . . . . . .  6
   8  IANA Considerations . . . . . . . . . . . . . . . . . . . . . .  6
     8.1  Registration of the "permessage-priority" WebSocket
          Extension Name  . . . . . . . . . . . . . . . . . . . . . .  6
     8.2  Registration of the "Per-message Priority" WebSocket 
          Framing Header Bit  . . . . . . . . . . . . . . . . . . . .  6
   9  Acknowledgements  . . . . . . . . . . . . . . . . . . . . . . .  7
   10  References . . . . . . . . . . . . . . . . . . . . . . . . . .  7
     10.1  Normative References . . . . . . . . . . . . . . . . . . .  7
     10.2  Informative References . . . . . . . . . . . . . . . . . .  7
   Authors' Addresses . . . . . . . . . . . . . . . . . . . . . . . .  7














 


Oberstein                Expires July 20, 2014                  [Page 2]

Internet-Draft      Priority Extension for WebSocket        January 2014


1  Introduction

   <Introduction Text>

1.1  Conformance Requirements and Complementary Terminology

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this
   document are to be interpreted as described in RFC 2119 [RFC2119].

   Requirements phrased in the imperative as part of algorithms (such as
   "strip any leading space characters" or "return false and abort these
   steps") are to be interpreted with the meaning of the key word
   ("MUST", "SHOULD", "MAY", etc.) used in introducing the algorithm.

   Conformance requirements phrased as algorithms or specific steps can
   be implemented in any manner, so long as the end result is
   equivalent.  In particular, the algorithms defined in this
   specification are intended to be easy to understand and are not
   intended to be performant.

   This document references the procedure to _Fail the WebSocket
   Connection_. This procedure is defined in Section 7.1.7 of [RFC6455].

   This document references the event that _The WebSocket Connection is
   Established_ and the event that _A WebSocket Message Has Been
   Received_. These events are defined in Section 4.1 and Section 6.2,
   respectively, of [RFC6455].


1.2  Complementary Terminology

   This document defines some terms about WebSocket and WebSocket
   Extension mechanism that are underspecified or not defined at all in
   [RFC6455].  This terminology is effective only in this document and
   any other documents that refer to this section.

   Non-control message means a message that consists of non-control
   frames as defined in Section 5.6 of [RFC6455].

   Message payload (or payload of a message) means concatenation of the
   payload data portion of all frames representing a single message, as
   well as how /data/ is formed from in Section 6.2 of [RFC6455].

   Extension in use next to extension X means the extension listed next
   to X in the "Sec-WebSocket-Extensions" header in the server's opening
   handshake as defined in Section 9.1 of [RFC6455].  Such an extension
   is applied to outgoing data from the application right after X on
 


Oberstein                Expires July 20, 2014                  [Page 3]

Internet-Draft      Priority Extension for WebSocket        January 2014


   sender side but applied right before X to incoming data from the
   underlying transport.

   Extension negotiation offer means each element in the "Sec-WebSocket-
   Extensions" header in the client's opening handshake.

   Extension negotiation response means each element in the "Sec-
   WebSocket-Extensions" header in the server's opening handshake.

   Accept an extension negotiation offer means including a corresponding
   extension negotiation response in the "Sec-WebSocket-Extensions"
   header in the server's opening handshake.

   Decline an extension negotiation offer means not including a
   corresponding extension negotiation response in the "Sec-WebSocket-
   Extensions" header in the server's opening handshake.


2  WebSocket Per-message Priority Extension

   <Document text>

      Definitions and code {
        line 1
        line 2
      }


   Special characters examples:

   The characters  , , , 
   However, the characters \0, \&, \%, \" are displayed.

   .ti 0  is displayed in text instead of used as a directive. 
   .\"  is displayed in document instead of being treated as a comment

   C:\dir\subdir\file.ext  Shows inclusion of backslash "\".


3  Extension Negotiation

   To offer use of the Permessage-Priority Extension, a client includes
   a "Sec-WebSocket-Extensions" header in the client's opening handshake
   of the WebSocket connection that contains the value "permessage-
   priority".

   There are no parameters to the extension offer.

 


Oberstein                Expires July 20, 2014                  [Page 4]

Internet-Draft      Priority Extension for WebSocket        January 2014


   To accept an offer to use the Permessage-Priority Extension, a server
   includes a "Sec-WebSocket-Extensions" header in the server's response
   during the opening handshake of the WebSocket connection.

   There are no parameters to the extension acceptance.

   A server MUST NOT accept a Permessage-Priority extension offer
   together with another extension if the Permessage-Priority extension
   will conflict with the extension on use of the RSV2 bit.  A client
   that receives a response accepting a Permessage-Priority extension
   offer together with such an extension MUST _Fail the WebSocket
   Connection_.

   A server declines Permessage-Priority extension offer by not
   including any element with the value "permessage-priority" in the
   "Sec-WebSocket-Extensions" header in it's response. If a server
   responds with no "permessage-priority" element in the "Sec-WebSocket-
   Extensions" header, both endpoints proceed without Per-message
   Priority once _the WebSocket Connection is established_.

   If a server responds with a "permessage-priority" in the "Sec-
   WebSocket-Extensions" header and _the WebSocket Connection is
   established_, both endpoints MUST use the algorithm described in
   Section 6 to exchange prioritized messages.

3.1  Negotiation Examples

   The following are examples for the "Sec-WebSocket-Extensions" header
   in WebSocket opening handshake client requests and server responses-

   Offer (client-to-server):

      permessage-priority

   Accept (server-to-client):

      permessage-priority


4  Framing

5  Intermediaries

6  permessage-priority extension




 


Oberstein                Expires July 20, 2014                  [Page 5]

Internet-Draft      Priority Extension for WebSocket        January 2014


7  Security Considerations

   With Per-message Priority Extension active, there can be more than
   one message in flight in each direction, and hence, additional
   buffering might be required on endpoints and intermediaries.

   A rogue implementation or an attacker might use this to mount a
   denial-of-service attack, exhausting memory in the target. For
   example, an attacker might start a large number of prioritized
   messages, but never end them.

   WebSocket endpoints and intermediaries supporting the Per-message
   Priority Extension SHOULD therefor provide means to effectively limit
   the total buffering memory in use on a WebSocket connection, and fail
   the WebSocket connection when that limit is reached.


8  IANA Considerations

8.1  Registration of the "permessage-priority" WebSocket Extension Name

   This section describes a WebSocket extension name registration in the
   WebSocket Extension Name Registry [RFC6455].

   Extension Identifier

      permessage-priority

   Extension Common Name

      WebSocket Per-message Priority

   Extension Definition

      This document.

   Known Incompatible Extensions

      None

   The "permessage-priority" extension name is used in the "Sec-
   WebSocket-Extensions" header in the WebSocket opening handshake to
   negotiate use of the permessage-priority extension.


8.2  Registration of the "Per-message Priority" WebSocket Framing Header
   Bit

 


Oberstein                Expires July 20, 2014                  [Page 6]

Internet-Draft      Priority Extension for WebSocket        January 2014


   This section describes a WebSocket framing header bit registration in
   the WebSocket Framing Header Bits Registry [RFC6455].

   Header Bit

      RSV2

   Common Name

      Per-message Priority

   Meaning

      The message is prioritized or not.

   Reference

      Section X of this document.

   The "Per-message Priority" framing header bit is used on all
   fragments of non-control messages to indicate whether the fragment
   belongs to a prioritized message or not.


9  Acknowledgements

   Tbd.


10  References

10.1  Normative References

   [RFC6455]  Fette, I. and A. Melnikov, "The WebSocket Protocol", RFC
              6455, December 2011


10.2  Informative References



Authors' Addresses


   Tobias Oberstein
   Tavendo GmbH

   EMail: tobias.oberstein@tavendo.de
 


Oberstein                Expires July 20, 2014                  [Page 7]

Internet-Draft      Priority Extension for WebSocket        January 2014





















































Oberstein                Expires July 20, 2014                  [Page 8]
